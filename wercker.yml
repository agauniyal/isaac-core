box: ubuntu


start-build:

  steps:

    - script:
        name: report system
        code: |
          cat /proc/version


build-gcc-default:

  steps:

    - script:
        name: update system
        code: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get -y update && apt-get -y upgrade

    - script:
        name: install gcc
        code: |
          apt-get -y install build-essential gcc g++

    - script:
        name: echo gcc version
        code: |
          gcc --version
          g++ --version

    - script:
        name: install meson & ninja dependencies
        code: |
          apt-get -y install git curl meson python3 ninja-build lcov cppcheck valgrind libgtest-dev

    - script:
        name: echo meson & ninja versions
        code: |
          meson --version
          ninja --version

    - script:
        name: build project
        code: |
          mkdir build && cd build
          meson ..
          ninja

    - script:
        name: test project
        code: |
          cd build
          ninja test
          ./test/testexe

    - script:
        name: run project
        code: |
          cd build
          ./src/isaac-core


build-gcc-5:

  steps:

    - script:
        name: update system
        code: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get -yq update && apt-get -yq upgrade
          apt-get install -yq software-properties-common
          add-apt-repository ppa:ubuntu-toolchain-r/test -y
          apt-get -y update && apt-get -y upgrade

    - script:
        name: install gcc 5
        code: |
          apt-get -y install gcc-5 g++-5
          update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 100
          update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 100
          apt-get -y install build-essential
          update-alternatives --config gcc
          update-alternatives --config g++

    - script:
        name: install dependencies
        code: |
          apt-get -y install git curl python3 python3-pip lcov cppcheck valgrind

    - script:
        name: install ninja build
        code: |
          git clone git://github.com/ninja-build/ninja.git && cd ninja
          git checkout release
          python3 ./configure.py --bootstrap
          cp ninja /usr/bin/ninja
          cd ../
          rm -rf ninja/

    - script:
        name: install meson
        code: |
          pip3 install meson

    - script:
        name: echo meson & ninja versions
        code: |
          meson.py --version
          ninja --version

    - script:
        name: build project
        code: |
          mkdir build && cd build
          meson.py ..
          ninja

    - script:
        name: test project
        code: |
          cd build
          ninja test
          ./test/testexe

    - script:
        name: run project
        code: |
          cd build
          ./src/isaac-core


build-gcc-6:

  steps:

    - script:
        name: update system
        code: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get -yq update && apt-get -yq upgrade
          apt-get install -yq software-properties-common
          add-apt-repository ppa:ubuntu-toolchain-r/test -y
          apt-get -y update && apt-get -y upgrade

    - script:
        name: install gcc 6
        code: |
          apt-get -y install gcc-6 g++-6
          update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100
          update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100
          apt-get -y install build-essential
          update-alternatives --config gcc
          update-alternatives --config g++

    - script:
        name: echo gcc version
        code: |
          gcc --version
          g++ --version

    - script:
        name: install dependencies
        code: |
          apt-get -y install git curl python3 python3-pip lcov cppcheck valgrind

    - script:
        name: install ninja build
        code: |
          git clone git://github.com/ninja-build/ninja.git && cd ninja
          git checkout release
          python3 ./configure.py --bootstrap
          cp ninja /usr/bin/ninja
          cd ../
          rm -rf ninja/

    - script:
        name: install meson
        code: |
          pip3 install meson

    - script:
        name: echo meson & ninja versions
        code: |
          meson.py --version
          ninja --version

    - script:
        name: build project
        code: |
          mkdir build && cd build
          meson.py .. -Db_coverage=true
          ninja

    - script:
        name: test project
        code: |
          cd build
          ninja test
          ./test/testexe

    - script:
        name: run project
        code: |
          cd build
          ./src/isaac-core

    - script:
        name: upload coverage to coveralls
        code: |
          pip3 install cpp-coveralls
          cd build
          ninja coverage-html
          cd ../
          cpp-coveralls -r . -b build/ -e subprojects/ -e build/meson-private/sanitycheckcpp.cc


build-clang-default:

  steps:

    - script:
        name: update system
        code: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get -y update && apt-get -y upgrade

    - script:
        name: install clang
        code: |
          apt-get -y install build-essential clang

    - script:
        name: echo clang version
        code: |
          clang --version
          clang++ --version

    - script:
        name: install meson and ninja dependencies
        code: |
          apt-get -y install git curl meson python3 ninja-build lcov cppcheck valgrind libgtest-dev


    - script:
        name: echo meson & ninja versions
        code: |
          meson --version
          ninja --version

    - script:
        name: build project
        code: |
          export CXX=clang++
          mkdir build && cd build
          CXX=clang++ meson ..
          ninja

    - script:
        name: test project
        code: |
          cd build
          ninja test
          ./test/testexe

    - script:
        name: run project
        code: |
          cd build
          ./src/isaac-core
